
export const Schema = {
  listFields: ['email', 'hireDate', 'iCareMember'],
  fields: {
    email: {
      id: 'email',
      description: 'Email',
      fieldType: 'string',
      operators: ['is', 'contains', 'startsWith'],
    },
    hireDate: {
      id: 'hireDate',
      description: 'Hire date',
      fieldType: 'date',
      operators: ['on', 'before', 'after', 'onOrBefore', 'onOrAfter', 'within'],
    },
    iCareMember: {
      id: 'iCareMember',
      description: 'iCare member',
      fieldType: 'number',
      operators: ['equal', 'lessThan', 'greaterThan', 'lessThanOrEqual', 'greaterThanOrEqual', 'between'],
    },
  },
  operators: {
    is: {
      id: 'is',
      description: 'is',
      noOfParams: 1,
      code: '=',
      operate: () => {},
    },
    startsWith: {
      id: 'startsWith',
      description: 'starts with',
      noOfParams: 1,
      code: 'startswith',
      operate: () => {},
    },
    contains: {
      id: 'contains',
      description: 'contains',
      noOfParams: 1,
      code: 'contains',
      operate: () => {},
    },
    on: {
      id: 'on',
      description: 'on',
      noOfParams: 1,
      code: '=',
      operate: () => {},
    },
    before: {
      id: 'before',
      description: 'before',
      noOfParams: 1,
      code: '<',
      operate: () => {},
    },
    onOrBefore: {
      id: 'onOrBefore',
      description: 'on or before',
      noOfParams: 1,
      code: '<=',
      operate: () => {},
    },
    after: {
      id: 'after',
      description: 'after',
      noOfParams: 1,
      code: '>',
      operate: () => {},
    },
    onOrAfter: {
      id: 'onOrAfter',
      description: 'on or after',
      noOfParams: 1,
      code: '>=',
      operate: () => {},
    },
    within: {
      id: 'within',
      description: 'within',
      noOfParams: 2,
      code: ['>=', '<='],
      operate: () => {},
    },
    equal: {
      id: 'equal',
      description: 'equal to',
      noOfParams: 1,
      code: '=',
      operate: () => {},
    },
    lessThan: {
      id: 'lessThan',
      description: 'less than',
      noOfParams: 1,
      code: '<',
      operate: () => {},
    },
    greaterThan: {
      id: 'greaterThan',
      description: 'greater than',
      noOfParams: 1,
      code: '>',
      operate: () => {},
    },
    lessThanOrEqual: {
      id: 'lessThanOrEqual',
      description: 'less than or equal to',
      noOfParams: 1,
      code: '<=',
      operate: () => {},
    },
    greaterThanOrEqual: {
      id: 'greaterThanOrEqual',
      description: 'greater than or equal to',
      noOfParams: 1,
      code: '>=',
      operate: () => {},
    },
    between: {
      id: 'between',
      description: 'between',
      noOfParams: 2,
      code: ['>=', '<='],
      operate: () => {},
    },
  }
};